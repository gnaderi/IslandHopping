buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.3.RELEASE'
        dockerGradlePlugin = '1.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("se.transmode.gradle:gradle-docker:${dockerGradlePlugin}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'


group = 'com.gnaderi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
bootJar {
    baseName = 'island-hopping'
    version = '0.0.1-SNAPSHOT'
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/resources/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
//	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
//	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
//	compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    runtime("com.h2database:h2")

}
